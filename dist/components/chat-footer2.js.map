{"file":"chat-footer2.js","mappings":";;;;;;AAAA,MAAM,aAAa,GAAG,mhqBAAmhqB;;MCe5hqB,UAAU;;;;;;;;;;IA0Bb,oBAAe,GAAG;MACxB,MAAM,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;MAEtC,IAAI,WAAW,GAAG,GAAG,EAAE;QACrB,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC;OACxB;WAAM;QACL,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAA;OACtB;KACF,CAAC;;;;;;;;IASM,iBAAY,GAAG,CAAC,CAAQ;MAC9B,CAAC,CAAC,cAAc,EAAE,CAAC;MACnB,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,EAAE;QACrB,KAAK,CAAC,QAAQ,GAAG;UACf,GAAG,KAAK,CAAC,QAAQ;UACjB,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;SACzE,CAAC;QACF,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAEhB,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;QAC5D,IAAI,WAAW,YAAY,WAAW,EAAE;UACtC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,WAAW,CAAC,YAAY,CAAC,CAAC;SAC9C;OACF;KACF,CAAC;;;;;;IAOM,iBAAY,GAAG,CAAC,KAAY;MAClC,IAAI,CAAC,KAAK,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;KACvD,CAAC;IAiBM,gBAAW,GAAG;MACpB,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC;KACzB,CAAC;IAEM,eAAU,GAAG;MACnB,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC;KAC1B,CAAC;;4BAvF0B,IAAI;;;;;;EAMhC,iBAAiB;IACf,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IACxD,IAAI,CAAC,eAAe,EAAE,CAAC;GACxB;;;;;EAMD,oBAAoB;IAClB,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;GAC5D;;;;;;;EAuDO,SAAS;IACf,IAAI,KAAK,CAAC,QAAQ,EAAE;MAClB,IAAI,KAAK,CAAC,UAAU,EAAE;QACpB,OAAO,KAAK,CAAC;OACd;KACF;IACD,OAAO,IAAI,CAAC;GACb;EAUD,MAAM;IACJ,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,KAAK,EAAE,GAAG,kBAAkB,GAAG,4BAA4B,CAAC;IAE1F,QACE,WAAK,KAAK,EAAC,WAAW,IACnB,IAAI,CAAC,SAAS,EAAE,KACf,yBACE,qBAAe,IAAI,EAAC,8BAA8B,GAAiB,CACrD,CACjB,EACD,YAAM,QAAQ,EAAE,IAAI,CAAC,YAAY,EAAE,KAAK,EAAC,sBAAsB,IAC7D,WAAK,KAAK,EAAC,eAAe,IACxB,aACE,YAAY,EAAC,KAAK,EAClB,IAAI,EAAC,MAAM,EACX,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,WAAW,EAAC,SAAS,EACrB,OAAO,EAAE,IAAI,CAAC,WAAW,EACzB,MAAM,EAAE,IAAI,CAAC,UAAU,EACvB,OAAO,EAAE,IAAI,CAAC,YAAY,GAC1B,CACE,EAEN,cAAQ,KAAK,EAAE,WAAW,EAAE,IAAI,EAAC,QAAQ,IACvC,WAAK,KAAK,EAAC,4BAA4B,EAAC,GAAG,EAAC,sDAAsD,GAAG,CAC9F,CACJ,CACH,EACN;GACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["./src/components/chat-footer/chat-footer.scss?tag=chat-footer&encapsulation=shadow","./src/components/chat-footer/chat-footer.tsx"],"sourcesContent":[":host {\n  font-size: 10px;\n}\n\n.dav {\n\n  &-footer {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-top: 16px;\n    //padding: 0 8px;\n\n    &__textfield {\n      width: 100%;\n    }\n\n    &__icon {\n      margin-left: 8px;\n      background-color: $red_primary;\n      width: 40px;\n      min-width: 40px;\n      height: 40px;\n      border-radius: 50%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      cursor: pointer;\n\n      &__img {\n        width: 24px;\n        height: 24px;\n      }\n\n      &__img-send {\n        width: 28px;\n        height: 28px;\n        margin-right: 4px;\n      }\n\n      &__inactive {\n        @extend .dav-footer__icon;\n        background-color: $option_hover;\n        pointer-events: none;\n      }\n    }\n\n  }\n\n  &__full-width {\n    width: 100%;\n  }\n\n  &__equalizer {\n    width: 60px;\n    height: 50px;\n  }\n}\n\n.noPadding {\n  padding-bottom: 0px;\n}\n\n.padding-x {\n  margin-left: 8px;\n  margin-right: 8px;\n}\n\n%textFieldGeneral {\n  width: 100%;\n  height: 40px;\n  padding: 8px;\n  border: 1px solid #D1D5E0;\n  border-radius: 8px;\n  background-color: #ffffff;\n  color: #404040;\n  font-size: $font_small;\n  font-weight: 400;\n  box-sizing: border-box;\n  transition: all .2s ease;\n\n  &:-ms-reveal,\n  &:-ms-clear {\n    display: none;\n  }\n}\n\n.dav-textField {\n  @extend %textFieldGeneral;\n  position: relative;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n\n  input {\n    // width: 100%;\n    border: none;\n    background-color: transparent;\n\n    flex: 1;\n\n    &:focus {\n      outline: none;\n    }\n\n    &::placeholder {\n      color: #9D9D9D;\n    }\n\n    &:disabled {\n      cursor: not-allowed;\n    }\n\n  }\n\n  &__button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 24px;\n    width: 24px;\n    cursor: pointer;\n\n    img {\n      display: inline-block;\n      width: auto;\n    }\n\n  }\n\n  &__disabled {\n    @extend .dav-textField;\n    background-color: #F7F7F7;\n    color: #9D9D9D;\n    cursor: not-allowed;\n    border: 1px solid #EDEDED;\n  }\n\n  &__focused {\n    border: 1px solid #AAB1BC;\n  }\n\n  &__error {\n    border: 1px solid #B70412;\n  }\n\n}","/**\n * Component representing the chat header.\n */\nimport { Component, h, State } from '@stencil/core';\nimport { state } from '../../store/store';\nimport { Sender } from '../chat-component/enums/sender';\n\n/**\n * Component representing the chat footer.\n */\n@Component({\n  tag: 'chat-footer',\n  styleUrl: 'chat-footer.scss',\n  shadow: true\n})\nexport class ChatFooter {\n  @State() value: string;\n  @State() isElementVisible = true;\n\n  /**\n   * Lifecycle method called when the component is connected to the DOM.\n   * Adds a window resize event listener and calls the `checkWindowSize` method.\n   */\n  connectedCallback() {\n    window.addEventListener('resize', this.checkWindowSize);\n    this.checkWindowSize();\n  }\n\n  /**\n   * Lifecycle method called when the component is disconnected from the DOM.\n   * Removes the window resize event listener.\n   */\n  disconnectedCallback() {\n    window.removeEventListener('resize', this.checkWindowSize);\n  }\n\n  /**\n   * Checks the window size and updates the `isElementVisible` property based on the window width.\n   * If the window width is greater than 768px, sets `isElementVisible` to `false`.\n   * Otherwise, sets it to `true`.\n   */\n  private checkWindowSize = () => {\n    const windowWidth = window.innerWidth;\n\n    if (windowWidth > 768) {\n      state.isMobile = false;\n    } else {\n      state.isMobile = true\n    }\n  };\n\n  /**\n   * Handles the form submission event.\n   * Prevents the default form submission behavior.\n   * If the value is not empty, adds a new message to the state's messages array\n   * and clears the input field.\n   * @param {Event} e - The form submission event.\n   */\n  private handleSubmit = (e: Event) => {\n    e.preventDefault();\n    if (this.value !== '') {\n      state.messages = [\n        ...state.messages,\n        { text: this.value, sender: Sender.USER, id: state.messages.length + 1 }\n      ];\n      this.value = '';\n\n      const chatElement = document.querySelector('#chat-element');\n      if (chatElement instanceof HTMLElement) {\n        window.scrollTo(0, chatElement.scrollHeight);\n      }\n    }\n  };\n\n  /**\n   * Handles the input change event.\n   * Updates the `value` property with the new input value.\n   * @param {Event} event - The input change event.\n   */\n  private handleChange = (event: Event) => {\n    this.value = (event.target as HTMLInputElement).value;\n  };\n\n  /**\n   * Determines whether to show the chips based on the current state.\n   * Returns `true` if the state is not mobile or if the user is not currently writing a message.\n   * Returns `false` otherwise.\n   * @returns {boolean} A boolean indicating whether to show the chips.\n   */\n  private showChips(): boolean {\n    if (state.isMobile) {\n      if (state.isWritting) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private handleFocus = () => {\n    state.isWritting = true;\n  };\n\n  private handleBlur = () => {\n    state.isWritting = false;\n  };\n\n  render() {\n    const buttonClass = this.value !== '' ? 'dav-footer__icon' : 'dav-footer__icon__inactive';\n\n    return (\n      <div class=\"padding-x\">\n        {this.showChips() && (\n          <dav-chip-list>\n            <dav-chip-item text=\"Desbloquear mi clave virtual\"></dav-chip-item>\n          </dav-chip-list>\n        )}\n        <form onSubmit={this.handleSubmit} class=\"dav-footer noPadding\">\n          <div class=\"dav-textField\">\n            <input\n              autoComplete=\"off\"\n              type=\"text\"\n              value={this.value}\n              placeholder=\"Mensaje\"\n              onFocus={this.handleFocus} // Reference the onFocus event handler\n              onBlur={this.handleBlur} // Reference the onBlur event handler\n              onInput={this.handleChange}\n            />\n          </div>\n\n          <button class={buttonClass} type=\"submit\">\n            <img class=\"dav-footer__icon__img-send\" src=\"../../assets/icons/extra-icons/icon-send-message.svg\" />\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n"],"version":3}