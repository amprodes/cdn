{"file":"chat-component.js","mappings":";;AAAA,IAAY,MAIT;AAJH,WAAY,MAAM;EACd,uBAAa,CAAA;EACb,uBAAa,CAAA;EACb,6BAAmB,CAAA;AACrB,CAAC,EAJS,MAAM,KAAN,MAAM;;ACAlB,MAAM,gBAAgB,GAAG,+rmBAA+rmB;;MCS3smBA,eAAa;;;;;oBACW,EAAE;;EAErC,iBAAiB,CAAC,QAAuB,EAAE,QAAuB;IAChE,OAAO,CAAC,GAAG,CAAC,mCAAmC,EAAE,QAAQ,CAAC,CAAC;IAC3D,OAAO,CAAC,GAAG,CAAC,mCAAmC,EAAE,QAAQ,CAAC,CAAC;GAC5D;EACD,iBAAiB;IACf,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE,IAAI,EAAE,sDAAsD,EAAE,MAAM,EAAE,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,+EAA+E,EAAE,MAAM,EAAE,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,0BAA0B,EAAE,MAAM,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC,CAAA;GACnR;EAED,MAAM;IACJ,QACE,WAAK,KAAK,EAAE,MAAM,IAEd,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAC,CAAC,KAC1B,WAAK,GAAG,EAAE,CAAC,IACT,mBAAa,IAAI,EAAE,OAAO,CAAC,IAAI,GAAiB,CAC5C,CACP,CAEC,EACN;GACH;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["ChatComponent"],"sources":["./src/components/chat-component/enums/sender.enum.ts","./src/components/chat-component/chat-component.scss?tag=chat-component&encapsulation=shadow","./src/components/chat-component/chat-component.tsx"],"sourcesContent":["export enum Sender{\n    VIVI = 'VIVI',\n    USER = 'USER',\n    ADVISOR = 'ADVISOR'\n  }\n  ",":host {\n  display: block;\n}\n.chat{\n  padding-top: 16px;\n}\n","import { Component, h, State, Watch } from '@stencil/core';\nimport { Sender } from './enums/sender.enum';\nimport  ChatMessage  from './interfaces/ChatMessage.interface';\n\n@Component({\n  tag: 'chat-component',\n  styleUrl: 'chat-component.scss',\n  shadow: true,\n})\nexport class ChatComponent {\n  @State() messages: ChatMessage[] = [];\n  @Watch('messages')\n  watchStateHandler(newValue: ChatMessage[], oldValue: ChatMessage[]) {\n    console.log('The old value of randNumbers is: ', oldValue);\n    console.log('The new value of randNumbers is: ', newValue);\n  }\n  componentWillLoad() {\n    this.messages = [{ text: \"¡Hola! Soy Vivi, la asistente virtual de Davivienda.\", sender: Sender.VIVI }, { text: \"Si tiene clave virtual, ingrese con ella para recibir atención personalizada.\", sender: Sender.VIVI }, { text: \"¿En qué le puedo ayudar?\", sender: Sender.VIVI }]\n  }\n \n  render() {\n    return (\n      <div class={'chat'}>\n        {\n          this.messages.map((message,i) => \n            <div key={i}>\n              <chat-bubble text={message.text} ></chat-bubble>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n\n}\n"],"version":3}