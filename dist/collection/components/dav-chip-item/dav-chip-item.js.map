{"version":3,"file":"dav-chip-item.js","sourceRoot":"","sources":["../../../src/components/dav-chip-item/dav-chip-item.tsx"],"names":[],"mappings":"AAAA;;GAEG;AACH,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAOnD,MAAM,OAAO,WAAW;;2BAKa,KAAK;oBAMZ,IAAI;gBAMT,EAAE;;EAEzB;;;KAGG;EACK,MAAM;IACZ,IAAI,MAAM,GAAW,EAAE,CAAC;IAExB,IAAI,IAAI,CAAC,eAAe,EAAE;MACxB,MAAM,GAAG,MAAM,GAAG,OAAO,CAAC;KAC3B;SAAM;MACL,MAAM,GAAG,MAAM,GAAG,SAAS,CAAC;KAC7B;IAED,IAAI,IAAI,CAAC,QAAQ,EAAE;MACjB,MAAM,GAAG,MAAM,GAAG,SAAS,CAAC;KAC7B;IAED,OAAO,MAAM,CAAC;EAChB,CAAC;EAED,MAAM;IACJ,OAAO,CACL,cAAQ,KAAK,EAAE,gBAAgB,IAAI,CAAC,MAAM,EAAE,EAAE,IAC3C,IAAI,CAAC,IAAI,CACH,CACV,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["/**\n * Component representing a chip item.\n */\nimport { Component, h, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'dav-chip-item',\n  styleUrl: 'dav-chip-item.scss',\n  shadow: true,\n})\nexport class DavChipItem {\n  /**\n   * Indicates whether the chip item is an option for a bubble.\n   * @prop {boolean} optionForBubble - Set to `true` if the chip item is an option for a bubble, `false` otherwise. Defaults to `false`.\n   */\n  @Prop() optionForBubble: boolean = false;\n\n  /**\n   * Indicates whether the chip item should be wrapped.\n   * @prop {boolean} isWraped - Set to `true` if the chip item should be wrapped, `false` otherwise. Defaults to `true`.\n   */\n  @Prop() isWraped: boolean = true;\n\n  /**\n   * The text displayed on the chip item.\n   * @prop {string} text - The text to be displayed.\n   */\n  @Prop() text: string = '';\n\n  /**\n   * Configures the chip item based on the prop values.\n   * @returns {string} - The configuration string based on the prop values.\n   */\n  private config(): string {\n    let config: string = '';\n\n    if (this.optionForBubble) {\n      config = config + 'width';\n    } else {\n      config = config + 'aligned';\n    }\n\n    if (this.isWraped) {\n      config = config + ' wraped';\n    }\n\n    return config;\n  }\n\n  render() {\n    return (\n      <button class={`dav-chipItem ${this.config()}`}>\n        {this.text}\n      </button>\n    );\n  }\n}\n"]}